# -*- coding: utf-8 -*-
"""
/***************************************************************************
 AdjustStyleDockWidget
                                 A QGIS plugin
 Adjust color, line thickness, font size etc. of all symbols/labels.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-05-05
        git sha              : $Format:%H$
        copyright            : (C) 2023 by Florian Neukirchen
        email                : mail@riannek.de
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import QtGui, QtWidgets, uic
from qgis.PyQt.QtCore import pyqtSignal, Qt
from qgis.PyQt.QtWidgets import QAction

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'adjust_style_dockwidget_base.ui'))


class AdjustStyleDockWidget(QtWidgets.QDockWidget, FORM_CLASS):

    closingPlugin = pyqtSignal()

    def __init__(self, parent=None):
        """Constructor."""
        super(AdjustStyleDockWidget, self).__init__(parent)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://doc.qt.io/qt-5/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

    def closeEvent(self, event):
        self.closingPlugin.emit()
        event.accept()



class AdjustStyleLayoutDockWidget(AdjustStyleDockWidget):
    def __init__(self, parent=None):
        super(AdjustStyleLayoutDockWidget, self).__init__(parent)



class AdjustStyleLayoutHandler():
    def __init__(self, plugin_instance, designer):
        self.plugin_instance = plugin_instance
        self.designer = designer
        self.dockwidget = None


        self.action = QAction(plugin_instance.icon, plugin_instance.menu, designer)
        self.action.triggered.connect(self.openDesignerDockWidget)
        self.action.setEnabled(True)

        toolbar = designer.actionsToolbar()
        toolbar.addAction(self.action)

        

    def openDesignerDockWidget(self):
        if self.dockwidget is None:
            self.dockwidget = AdjustStyleLayoutDockWidget(self.designer.window())
            self.designer.addDockWidget(Qt.LeftDockWidgetArea, self.dockwidget)

        self.dockwidget.show()

    def unload(self):
        toolbar = self.designer.actionsToolbar()
        toolbar.removeAction(self.action)
        self.dockwidget = None
